apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'com.google.gms.google-services'

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.2"

    def keystorePropertiesFile = rootProject.file("keystore.properties")
    def keystoreProperties = new Properties()
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

    defaultConfig {
        applicationId "com.nims.hsketch"
        minSdkVersion 23
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        //광고
        resValue "string", "ADMOB_APP_ID", keystoreProperties['ADMOB_APP_ID']
        resValue "string", "ADMOB_BANNER_ID", keystoreProperties['ADMOB_BANNER_ID']
        buildConfigField "String", "ADMOB_OPENING_ID", keystoreProperties["ADMOB_OPENING_ID"]

        buildConfigField "String", "BASE_URL", keystoreProperties["BASE_URL"]
        buildConfigField "String", "BASE_PATH", keystoreProperties["BASE_PATH"]
        buildConfigField "String", "END_POINT", keystoreProperties["END_POINT"]
        buildConfigField "String", "END_POINT", keystoreProperties["END_POINT"]
        buildConfigField "String", "POLICY_END_POINT", keystoreProperties["POLICY_END_POINT"]
        buildConfigField "String", "TERMSOFSERVICE_END_POINT", keystoreProperties["TERMSOFSERVICE_END_POINT"]
        buildConfigField "String", "MAIN_IMAGE_PATH", keystoreProperties["MAIN_IMAGE_PATH"]
        buildConfigField "String", "PLAYSTORE_PATH", keystoreProperties["PLAYSTORE_PATH"]


    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }


}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

    implementation 'com.google.android.material:material:1.3.0'
    implementation 'com.jaredrummler:colorpicker:1.1.0'

    //Retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.6.0'

    //Glide 저품질
    implementation 'com.github.bumptech.glide:glide:4.12.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.12.0'

    //picasso 고품질
    implementation 'com.squareup.picasso:picasso:2.71828'

    //내려서 새로고침
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:1.1.0"

    implementation platform('com.google.firebase:firebase-bom:27.0.0')
    implementation 'com.google.firebase:firebase-analytics'
    implementation 'com.google.firebase:firebase-core'
    implementation 'com.google.firebase:firebase-auth'
    implementation 'com.firebaseui:firebase-ui-auth:7.1.1'

    implementation 'com.google.android.gms:play-services-ads:20.1.0'


    // 라이프사이클
    implementation 'androidx.lifecycle:lifecycle-runtime:2.3.1'
    // 애플리케이션 프로세스 라이프사이클 추적용 라이브러리
    implementation 'androidx.lifecycle:lifecycle-process:2.3.1'
    // 라이프사이클 추적용 어노테이션을 처리
    annotationProcessor 'androidx.lifecycle:lifecycle-compiler:2.3.1'

}
